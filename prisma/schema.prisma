// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tournament {
  id        String   @id @default(cuid())
  name      String
  started   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  players   Player[]
  matches   Match[]
}

model Player {
  id           String     @id @default(cuid())
  name         String
  tournamentId String
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  
  // Stats
  played         Int @default(0)
  won            Int @default(0)
  drawn          Int @default(0)
  lost           Int @default(0)
  goalsFor       Int @default(0)
  goalsAgainst   Int @default(0)
  goalDifference Int @default(0)
  points         Int @default(0)
  
  homeMatches Match[] @relation("HomePlayer")
  awayMatches Match[] @relation("AwayPlayer")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Match {
  id           String     @id @default(cuid())
  tournamentId String
  tournament   Tournament @relation(fields: [tournamentId], references: [id], onDelete: Cascade)
  
  homePlayerId String
  homePlayer   Player @relation("HomePlayer", fields: [homePlayerId], references: [id], onDelete: Cascade)
  
  awayPlayerId String
  awayPlayer   Player @relation("AwayPlayer", fields: [awayPlayerId], references: [id], onDelete: Cascade)
  
  homeScore Int?
  awayScore Int?
  played    Boolean @default(false)
  round     Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
